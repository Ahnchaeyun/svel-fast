name: CI/CD

on:
  push:
    branches: [ test ]  # main 브랜치에 푸시될 때
    paths-ignore:
      - '.gitignore'
      - '.dockerignore'

jobs:
  Continuous_Integration:
    runs-on: ubuntu-latest  # 실행 환경 (GitHub 제공)

    steps:
    # 1. 소스 코드 체크아웃
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1

    # 2. Docker Buildx 설정
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # 3. Docker 로그인
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ yunchae02 }}  # Docker Hub 사용자명
        password: ${{ dks1223232! }}  # Docker Hub 비밀번호

    # 4. 환경 변수 설정
    - name: Set Variables
      id: set-var
      run: |
        echo "DOCKER_REGISTRY=yunchae02" >> $GITHUB_ENV
        echo "FRONT_REPOSITORY=front" >> $GITHUB_ENV
        echo "BACK_REPOSITORY=back" >> $GITHUB_ENV
        echo "IMAGE_TAG=${{ github.run_number }}" >> $GITHUB_ENV
        echo "GIT_EMAIL=dkscodbs15@naver.com" >> $GITHUB_ENV
        echo "GIT_NAME=Ahnchaeyun" >> $GITHUB_ENV

    # 5. Frontend Docker 이미지 빌드
    - name: Build Frontend Docker Image
      id: build-frontend-image
      run: |
        docker build -t ${{ env.DOCKER_REGISTRY }}/${{ env.FRONT_REPOSITORY }}:${{ env.IMAGE_TAG }} ./frontend

    # 6. Backend Docker 이미지 빌드
    - name: Build Backend Docker Image
      id: build-backend-image
      run: |
        docker build -t ${{ env.DOCKER_REGISTRY }}/${{ env.BACK_REPOSITORY }}:${{ env.IMAGE_TAG }} ./backend

    # 7. Docker 이미지 푸시 (Frontend)
    - name: Push Frontend Docker Image
      id: push-frontend-image
      run: |
        docker push ${{ env.DOCKER_REGISTRY }}/${{ env.FRONT_REPOSITORY }}:${{ env.IMAGE_TAG }}

    # 8. Docker 이미지 푸시 (Backend)
    - name: Push Backend Docker Image
      id: push-backend-image
      run: |
        docker push ${{ env.DOCKER_REGISTRY }}/${{ env.BACK_REPOSITORY }}:${{ env.IMAGE_TAG }}

    # 9. 배포 레포지토리 체크아웃 (배포 파일이 있는 레포지토리)
    - name: Checkout Deployment Repository
      uses: actions/checkout@v4
      with:
        repository: Ahnchaeyun/svel-fast  # 배포 관련 설정이 있는 레포지토리
        ref: test  # 사용할 브랜치 (배포용 레포지토리)
        token: ${{ secrets.GH_TOKEN }}

    # 10. Kubernetes 배포 파일 업데이트
    - name: Update Kubernetes Manifest (Frontend)
      run: |
        sed -i "s@ \
        image: yunchae02/front:.*@ \
        image: yunchae02/front:${{ env.IMAGE_TAG }}@g" deploy/deployment.yml

    - name: Update Kubernetes Manifest (Backend)
      run: |
        sed -i "s@ \
        image: yunchae02/back:.*@ \
        image: yunchae02/back:${{ env.IMAGE_TAG }}@g" deploy/deployment.yml

    # 11. 배포 파일 커밋 및 푸시
    - name: Commit and Push Updated Kubernetes Manifest
      run: |
        git config user.email ${{ env.GIT_EMAIL }}
        git config user.name ${{ env.GIT_NAME }}
        git add deploy/deployment.yml
        git commit -m "Update frontend and backend image tags"
        git push svel test
