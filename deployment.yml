apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment  # Frontend 배포 이름
  labels:
    app: frontend
spec:
  replicas: 3  # Frontend 애플리케이션의 복제본 수
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: yunchae02/front:latest  # Docker 이미지 이름 (CI/CD에서 업데이트됨)
          ports:
            - containerPort: 80  # 컨테이너에서 노출할 포트
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment  # Backend 배포 이름
  labels:
    app: backend
spec:
  replicas: 3  # Backend 애플리케이션의 복제본 수
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: yunchae02/back:latest  # Docker 이미지 이름 (CI/CD에서 업데이트됨)
          ports:
            - containerPort: 8080  # Backend 포트 (예시로 8080 사용)
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service  # Frontend 서비스 이름
spec:
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 80  # 외부에서 접근할 포트
      targetPort: 80  # 컨테이너 내 포트
  type: LoadBalancer  # 외부 접근을 위한 로드밸런서 설정
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service  # Backend 서비스 이름
spec:
  selector:
    app: backend
  ports:
    - protocol: TCP
      port: 8080  # 외부에서 접근할 포트
      targetPort: 8080  # 컨테이너 내 포트
  type: LoadBalancer  # 외부 접근을 위한 로드밸런서 설정
